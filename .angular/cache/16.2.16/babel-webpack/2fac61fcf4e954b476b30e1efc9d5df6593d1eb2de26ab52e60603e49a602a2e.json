{"ast":null,"code":"import { CommonModule } from '@angular/common';\n// Ejemplo de componente compartido\nimport { FooterComponent } from './footer/footer.component';\nimport * as i0 from \"@angular/core\";\nexport class SharedModule {\n  static {\n    this.ɵfac = function SharedModule_Factory(t) {\n      return new (t || SharedModule)();\n    };\n  }\n  static {\n    this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n      type: SharedModule\n    });\n  }\n  static {\n    this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n      imports: [CommonModule]\n    });\n  }\n}\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(SharedModule, {\n    declarations: [FooterComponent\n    // cualquier otro componente que esté en `shared`\n    ],\n    imports: [CommonModule],\n    exports: [FooterComponent\n    // exportá lo que querés reutilizar\n    ]\n  });\n})();","map":{"version":3,"names":["CommonModule","FooterComponent","SharedModule","declarations","exports"],"sources":["C:\\Users\\Usuario\\test-angular-ssr-migrado\\src\\app\\shared\\shared.module.ts"],"sourcesContent":["// src/app/shared/shared.module.ts\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n// Ejemplo de componente compartido\nimport { FooterComponent } from './footer/footer.component';\n\n@NgModule({\n  declarations: [\n    FooterComponent\n    // cualquier otro componente que esté en `shared`\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    FooterComponent\n    // exportá lo que querés reutilizar\n  ]\n})\nexport class SharedModule { }\n\n// This module imports CommonModule and declares a FooterComponent.\n// It also exports the FooterComponent so that it can be used in other modules.\n// The SharedModule is a good place to put components, directives, and pipes that are used across multiple modules in your application.\n// This helps to keep your code organized and makes it easier to manage dependencies.\n// The SharedModule can be imported into other modules to make the FooterComponent available for use.\n// This is a common pattern in Angular applications to create a shared module for reusable components.\n// The SharedModule can also include other shared components, directives, and pipes as needed.\n// This allows for better organization and reusability of code across the application.\n// The SharedModule can be imported into other feature modules to provide access to the shared components.\n// This helps to keep the code DRY (Don't Repeat Yourself) and makes it easier to maintain.\n// The SharedModule can also include services that are used across multiple modules.\n// This allows for better organization and reusability of services across the application.\n// The SharedModule can be imported into other feature modules to provide access to the shared services.\n// This helps to keep the code DRY (Don't Repeat Yourself) and makes it easier to maintain.\n// The SharedModule can also include pipes that are used across multiple modules.\n// This allows for better organization and reusability of pipes across the application.\n// The SharedModule can be imported into other feature modules to provide access to the shared pipes.\n// This helps to keep the code DRY (Don't Repeat Yourself) and makes it easier to maintain.\n// The SharedModule can also include directives that are used across multiple modules.\n// This allows for better organization and reusability of directives across the application.\n// The SharedModule can be imported into other feature modules to provide access to the shared directives.\n// This helps to keep the code DRY (Don't Repeat Yourself) and makes it easier to maintain.\n// The SharedModule can also include other shared modules that are used across multiple modules.\n// This allows for better organization and reusability of modules across the application.\n// The SharedModule can be imported into other feature modules to provide access to the shared modules.\n// This helps to keep the code DRY (Don't Repeat Yourself) and makes it easier to maintain.\n// The SharedModule can also include other shared services that are used across multiple modules.\n// This allows for better organization and reusability of services across the application.\n// The SharedModule can be imported into other feature modules to provide access to the shared services.\n// This helps to keep the code DRY (Don't Repeat Yourself) and makes it easier to maintain.\n// The SharedModule can also include other shared components that are used across multiple modules.\n// This allows for better organization and reusability of components across the application.\n// The SharedModule can be imported into other feature modules to provide access to the shared components.\n// This helps to keep the code DRY (Don't Repeat Yourself) and makes it easier to maintain.\n// The SharedModule can also include other shared pipes that are used across multiple modules.\n// This allows for better organization and reusability of pipes across the application.\n// The SharedModule can be imported into other feature modules to provide access to the shared pipes.\n// This helps to keep the code DRY (Don't Repeat Yourself) and makes it easier to maintain.\n// The SharedModule can also include other shared directives that are used across multiple modules.\n// This allows for better organization and reusability of directives across the application."],"mappings":"AAGA,SAASA,YAAY,QAAQ,iBAAiB;AAE9C;AACA,SAASC,eAAe,QAAQ,2BAA2B;;AAe3D,OAAM,MAAOC,YAAY;;;uBAAZA,YAAY;IAAA;EAAA;;;YAAZA;IAAY;EAAA;;;gBAPrBF,YAAY;IAAA;EAAA;;;2EAOHE,YAAY;IAAAC,YAAA,GAXrBF;IACA;IAAA,C;cAGAD,YAAY;IAAAI,OAAA,GAGZH;IACA;IAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}