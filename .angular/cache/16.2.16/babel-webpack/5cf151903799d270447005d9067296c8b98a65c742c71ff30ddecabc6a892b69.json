{"ast":null,"code":"import { __decorate } from \"tslib\";\n// spinner.module.ts\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SpinnerComponent } from './spinner.component';\nlet SpinnerModule = class SpinnerModule {};\nSpinnerModule = __decorate([NgModule({\n  declarations: [SpinnerComponent],\n  exports: [SpinnerComponent],\n  imports: [CommonModule]\n})], SpinnerModule);\nexport { SpinnerModule };\n// This module imports CommonModule and declares a SpinnerComponent.\n// It also exports the SpinnerComponent so that it can be used in other modules.\n// The SpinnerModule is a good place to put components, directives, and pipes that are used across multiple modules in your application.\n// It helps to keep your code organized and makes it easier to manage dependencies.\n// The SpinnerModule can be imported into other modules to make the SpinnerComponent available for use.\n// This is a common pattern in Angular applications to create a shared module for reusable components.\n// The SpinnerModule can also include other shared components, directives, and pipes as needed.\n// This allows for better organization and reusability of code across the application.\n// The SpinnerModule can be imported into other feature modules to provide access to the shared components.\n// This helps to keep the code DRY (Don't Repeat Yourself) and makes it easier to maintain.\n// The SpinnerModule can also include services that are used across multiple modules.\n// This allows for better organization and reusability of services across the application.\n// The SpinnerModule can be imported into other feature modules to provide access to the shared services.\n// This helps to keep the code DRY (Don't Repeat Yourself) and makes it easier to maintain.\n// The SpinnerModule can also include pipes that are used across multiple modules.\n// This allows for better organization and reusability of pipes across the application.\n// The SpinnerModule can be imported into other feature modules to provide access to the shared pipes.\n// This helps to keep the code DRY (Don't Repeat Yourself) and makes it easier to maintain.\n// The SpinnerModule can also include directives that are used across multiple modules.\n// This allows for better organization and reusability of directives across the application.","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}