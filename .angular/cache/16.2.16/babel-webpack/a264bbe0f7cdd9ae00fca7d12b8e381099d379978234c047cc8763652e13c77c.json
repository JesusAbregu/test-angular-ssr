{"ast":null,"code":"import { tap } from 'rxjs/operators';\nimport { LoadingService } from './loading.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./loading.service\";\nexport class HttpInterceptorService {\n  constructor(loadingService) {\n    this.loadingService = loadingService;\n  }\n  intercept(req, next) {\n    this.loadingService.show();\n    return next.handle(req).pipe(tap(event => {}, error => {\n      this.loadingService.hide();\n    }, () => {\n      this.loadingService.hide();\n    }));\n  }\n  static {\n    this.ɵfac = function HttpInterceptorService_Factory(t) {\n      return new (t || HttpInterceptorService)(i0.ɵɵinject(LoadingService));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: HttpInterceptorService,\n      factory: HttpInterceptorService.ɵfac\n    });\n  }\n}","map":{"version":3,"names":["tap","LoadingService","HttpInterceptorService","constructor","loadingService","intercept","req","next","show","handle","pipe","event","error","hide","i0","ɵɵinject","factory","ɵfac"],"sources":["C:\\Users\\Usuario\\test-angular-ssr-migrado\\src\\app\\core\\http.interceptor.ts"],"sourcesContent":["import { Injectable, Inject } from '@angular/core';\r\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { LoadingService } from './loading.service';\r\n\r\n@Injectable()\r\nexport class HttpInterceptorService implements HttpInterceptor {\r\n  constructor(@Inject(LoadingService) private loadingService: LoadingService) {}\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    this.loadingService.show();\r\n\r\n    return next.handle(req).pipe(\r\n      tap(\r\n        event => {},\r\n        error => {\r\n          this.loadingService.hide();\r\n        },\r\n        () => {\r\n          this.loadingService.hide();\r\n        }\r\n      )\r\n    );\r\n  }\r\n}\r\n\r\n"],"mappings":"AAGA,SAASA,GAAG,QAAQ,gBAAgB;AACpC,SAASC,cAAc,QAAQ,mBAAmB;;;AAGlD,OAAM,MAAOC,sBAAsB;EACjCC,YAA4CC,cAA8B;IAA9B,KAAAA,cAAc,GAAdA,cAAc;EAAmB;EAE7EC,SAASA,CAACC,GAAqB,EAAEC,IAAiB;IAChD,IAAI,CAACH,cAAc,CAACI,IAAI,EAAE;IAE1B,OAAOD,IAAI,CAACE,MAAM,CAACH,GAAG,CAAC,CAACI,IAAI,CAC1BV,GAAG,CACDW,KAAK,IAAG,CAAE,CAAC,EACXC,KAAK,IAAG;MACN,IAAI,CAACR,cAAc,CAACS,IAAI,EAAE;IAC5B,CAAC,EACD,MAAK;MACH,IAAI,CAACT,cAAc,CAACS,IAAI,EAAE;IAC5B,CAAC,CACF,CACF;EACH;;;uBAjBWX,sBAAsB,EAAAY,EAAA,CAAAC,QAAA,CACbd,cAAc;IAAA;EAAA;;;aADvBC,sBAAsB;MAAAc,OAAA,EAAtBd,sBAAsB,CAAAe;IAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}